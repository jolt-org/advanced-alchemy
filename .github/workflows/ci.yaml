name: Tests And Linting

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Pre-Commit
        run: python -m pip install pre-commit

      - name: Load cached Pre-Commit Dependencies
        id: cached-pre-commit-dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Execute Pre-Commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    timeout-minutes: 45
    defaults:
      run:
        shell: bash
    steps:
      - name: "Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install Microsoft ODBC Drivers
        run: sudo ACCEPT_EULA=Y apt-get install msodbcsql18 -y

      - name: Free additional space
        run: |
          sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/lib/jvm || true
          sudo apt-get autoremove -y \
          && sudo apt-get clean -y \
          && sudo rm -rf /root/.cache \
          && sudo rm -rf /var/apt/lists/* \
          && sudo rm -rf /var/cache/apt/* \
          && sudo apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create cache file
        run: echo '${{ matrix.python-version }}' > ./matrix-file.txt

      - uses: pdm-project/setup-pdm@v3
        name: Set up PDM
        with:
          python-version: ${{ matrix.python-version }}
          allow-python-prereleases: true
          cache: true
          cache-dependency-path: |
            ./pdm.lock
            ./matrix-file.txt
      - name: Install base libraries
        # install a few core libraries for testing and building
        run: pip install nodeenv cython setuptools mypy cython pip --upgrade --quiet --user
      - name: Install dependencies
        run: pdm install -G:all
      - name: Test with Coverage
        run: pdm run pytest -m "" -n auto --cov=advanced_alchemy --cov-report=xml
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-xml
          path: coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-docs:
    needs:
      - validate
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install Microsoft ODBC
        run: sudo ACCEPT_EULA=Y apt-get install msodbcsql18 -y

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - uses: pdm-project/setup-pdm@v3
        name: Set up PDM
        with:
          python-version: "3.11"
          allow-python-prereleases: true
          cache: true

      - name: Install dependencies
        run: pdm install -G:docs

      - name: Build docs
        run: pdm run make docs

      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: echo $PR_NUMBER > .pr_number

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs-preview
          path: |
            docs/_build/html
            .pr_number
